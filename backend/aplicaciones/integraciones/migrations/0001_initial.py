# Generated by Django 4.2.23 on 2025-06-25 01:07

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("facturacion", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConfiguracionIntegracion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "ambiente",
                    models.CharField(
                        choices=[
                            ("demo", "Demo/Pruebas"),
                            ("produccion", "Producción"),
                        ],
                        db_index=True,
                        default="demo",
                        help_text="Ambiente de la integración",
                        max_length=20,
                        verbose_name="Ambiente",
                    ),
                ),
                (
                    "token",
                    models.TextField(
                        blank=True,
                        help_text="Token de autenticación",
                        null=True,
                        verbose_name="Token",
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        help_text="Clave de API",
                        max_length=200,
                        null=True,
                        verbose_name="API Key",
                    ),
                ),
                (
                    "usuario",
                    models.CharField(
                        blank=True,
                        help_text="Usuario de autenticación",
                        max_length=100,
                        null=True,
                        verbose_name="Usuario",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Contraseña de autenticación",
                        max_length=200,
                        null=True,
                        verbose_name="Password",
                    ),
                ),
                (
                    "ruc_empresa",
                    models.CharField(
                        help_text="RUC de la empresa en el proveedor",
                        max_length=11,
                        verbose_name="RUC Empresa",
                    ),
                ),
                (
                    "codigo_establecimiento",
                    models.CharField(
                        default="0000",
                        help_text="Código de establecimiento",
                        max_length=10,
                        verbose_name="Código Establecimiento",
                    ),
                ),
                (
                    "url_base",
                    models.URLField(
                        help_text="URL base para este ambiente", verbose_name="URL Base"
                    ),
                ),
                (
                    "url_pdf",
                    models.URLField(
                        blank=True,
                        help_text="URL para descargar PDFs",
                        null=True,
                        verbose_name="URL PDF",
                    ),
                ),
                (
                    "url_xml",
                    models.URLField(
                        blank=True,
                        help_text="URL para descargar XMLs",
                        null=True,
                        verbose_name="URL XML",
                    ),
                ),
                (
                    "logo_empresa_url",
                    models.URLField(
                        blank=True,
                        help_text="URL del logo de la empresa",
                        null=True,
                        verbose_name="Logo Empresa URL",
                    ),
                ),
                (
                    "datos_empresa_json",
                    models.TextField(
                        blank=True,
                        help_text="Datos de la empresa en formato JSON",
                        null=True,
                        verbose_name="Datos Empresa JSON",
                    ),
                ),
                (
                    "formato_pdf",
                    models.CharField(
                        choices=[
                            ("a4", "A4"),
                            ("ticket", "Ticket 80mm"),
                            ("ticket_50", "Ticket 50mm"),
                        ],
                        default="a4",
                        help_text="Formato de impresión PDF",
                        max_length=20,
                        verbose_name="Formato PDF",
                    ),
                ),
                (
                    "incluir_qr",
                    models.BooleanField(
                        default=True,
                        help_text="Si incluir código QR en documentos",
                        verbose_name="Incluir QR",
                    ),
                ),
                (
                    "validar_receptor",
                    models.BooleanField(
                        default=True,
                        help_text="Si validar datos del receptor",
                        verbose_name="Validar Receptor",
                    ),
                ),
                (
                    "enviar_email",
                    models.BooleanField(
                        default=True,
                        help_text="Si enviar documentos por email",
                        verbose_name="Enviar Email",
                    ),
                ),
                (
                    "configuracion_valida",
                    models.BooleanField(
                        default=False,
                        help_text="Si la configuración ha sido validada",
                        verbose_name="Configuración Válida",
                    ),
                ),
                (
                    "fecha_validacion",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha de última validación",
                        null=True,
                        verbose_name="Fecha Validación",
                    ),
                ),
                (
                    "mensaje_validacion",
                    models.TextField(
                        blank=True,
                        help_text="Mensaje del resultado de validación",
                        null=True,
                        verbose_name="Mensaje Validación",
                    ),
                ),
                (
                    "configuracion_avanzada_json",
                    models.TextField(
                        blank=True,
                        help_text="Configuración adicional en formato JSON",
                        null=True,
                        verbose_name="Configuración Avanzada",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Integración",
                "verbose_name_plural": "Configuraciones de Integración",
                "db_table": "integraciones_configuracion_integracion",
            },
        ),
        migrations.CreateModel(
            name="LogIntegracion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "tipo_operacion",
                    models.CharField(
                        choices=[
                            ("emision", "Emisión"),
                            ("consulta", "Consulta"),
                            ("anulacion", "Anulación"),
                            ("comunicacion_baja", "Comunicación de Baja"),
                            ("validacion", "Validación"),
                        ],
                        db_index=True,
                        help_text="Tipo de operación realizada",
                        max_length=20,
                        verbose_name="Tipo de Operación",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("enviando", "Enviando"),
                            ("exitoso", "Exitoso"),
                            ("error", "Error"),
                            ("timeout", "Timeout"),
                            ("reintentando", "Reintentando"),
                        ],
                        db_index=True,
                        default="enviando",
                        help_text="Estado de la operación",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "fecha_envio",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Fecha y hora del envío",
                        verbose_name="Fecha Envío",
                    ),
                ),
                (
                    "fecha_respuesta",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha y hora de la respuesta",
                        null=True,
                        verbose_name="Fecha Respuesta",
                    ),
                ),
                (
                    "tiempo_respuesta_ms",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Tiempo de respuesta en milisegundos",
                        null=True,
                        verbose_name="Tiempo Respuesta (ms)",
                    ),
                ),
                (
                    "endpoint_utilizado",
                    models.CharField(
                        help_text="Endpoint específico utilizado",
                        max_length=200,
                        verbose_name="Endpoint Utilizado",
                    ),
                ),
                (
                    "metodo_http",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("DELETE", "DELETE"),
                        ],
                        default="POST",
                        help_text="Método HTTP utilizado",
                        max_length=10,
                        verbose_name="Método HTTP",
                    ),
                ),
                (
                    "headers_envio",
                    models.TextField(
                        blank=True,
                        help_text="Headers enviados en formato JSON",
                        null=True,
                        verbose_name="Headers Envío",
                    ),
                ),
                (
                    "payload_envio",
                    models.TextField(
                        blank=True,
                        help_text="Datos enviados al proveedor",
                        null=True,
                        verbose_name="Payload Envío",
                    ),
                ),
                (
                    "codigo_respuesta_http",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Código de respuesta HTTP",
                        null=True,
                        verbose_name="Código Respuesta HTTP",
                    ),
                ),
                (
                    "headers_respuesta",
                    models.TextField(
                        blank=True,
                        help_text="Headers de respuesta en formato JSON",
                        null=True,
                        verbose_name="Headers Respuesta",
                    ),
                ),
                (
                    "payload_respuesta",
                    models.TextField(
                        blank=True,
                        help_text="Respuesta del proveedor",
                        null=True,
                        verbose_name="Payload Respuesta",
                    ),
                ),
                (
                    "exitoso",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Si la operación fue exitosa",
                        verbose_name="Exitoso",
                    ),
                ),
                (
                    "codigo_error",
                    models.CharField(
                        blank=True,
                        help_text="Código de error del proveedor",
                        max_length=50,
                        null=True,
                        verbose_name="Código Error",
                    ),
                ),
                (
                    "mensaje_error",
                    models.TextField(
                        blank=True,
                        help_text="Mensaje de error detallado",
                        null=True,
                        verbose_name="Mensaje Error",
                    ),
                ),
                (
                    "hash_sunat",
                    models.CharField(
                        blank=True,
                        help_text="Hash retornado por SUNAT",
                        max_length=100,
                        null=True,
                        verbose_name="Hash SUNAT",
                    ),
                ),
                (
                    "codigo_qr",
                    models.TextField(
                        blank=True,
                        help_text="Datos del código QR",
                        null=True,
                        verbose_name="Código QR",
                    ),
                ),
                (
                    "enlace_pdf",
                    models.URLField(
                        blank=True,
                        help_text="Enlace al PDF generado",
                        null=True,
                        verbose_name="Enlace PDF",
                    ),
                ),
                (
                    "enlace_xml",
                    models.URLField(
                        blank=True,
                        help_text="Enlace al XML generado",
                        null=True,
                        verbose_name="Enlace XML",
                    ),
                ),
                (
                    "enlace_cdr",
                    models.URLField(
                        blank=True,
                        help_text="Enlace al CDR de SUNAT",
                        null=True,
                        verbose_name="Enlace CDR",
                    ),
                ),
                (
                    "numero_intento",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Número del intento actual",
                        verbose_name="Número Intento",
                    ),
                ),
                (
                    "ip_origen",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP desde donde se realizó la petición",
                        null=True,
                        verbose_name="IP Origen",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User Agent de la petición",
                        null=True,
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True,
                        help_text="Observaciones adicionales",
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Integración",
                "verbose_name_plural": "Logs de Integración",
                "db_table": "integraciones_log_integracion",
                "ordering": ["-fecha_envio"],
            },
        ),
        migrations.CreateModel(
            name="ProveedorIntegracion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        db_index=True,
                        help_text="Código único del proveedor",
                        max_length=20,
                        unique=True,
                        verbose_name="Código",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del proveedor de integración",
                        max_length=100,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("nubefact", "Nubefact"),
                            ("facturalaPeru", "FacturalaPeru"),
                            ("efact", "eFact"),
                            ("sunat_directa", "SUNAT Directa"),
                        ],
                        db_index=True,
                        help_text="Tipo de proveedor de integración",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción del proveedor",
                        null=True,
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "url_api",
                    models.URLField(
                        help_text="URL base de la API del proveedor",
                        verbose_name="URL API",
                    ),
                ),
                (
                    "url_documentacion",
                    models.URLField(
                        blank=True,
                        help_text="URL de documentación de la API",
                        null=True,
                        verbose_name="URL Documentación",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("activo", "Activo"),
                            ("inactivo", "Inactivo"),
                            ("mantenimiento", "En Mantenimiento"),
                            ("suspendido", "Suspendido"),
                        ],
                        db_index=True,
                        default="activo",
                        help_text="Estado del proveedor",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "version_api",
                    models.CharField(
                        default="1.0",
                        help_text="Versión de la API utilizada",
                        max_length=20,
                        verbose_name="Versión API",
                    ),
                ),
                (
                    "es_principal",
                    models.BooleanField(
                        default=False,
                        help_text="Si es el proveedor principal",
                        verbose_name="Es Principal",
                    ),
                ),
                (
                    "limite_documentos_dia",
                    models.PositiveIntegerField(
                        default=1000,
                        help_text="Límite de documentos por día",
                        verbose_name="Límite Documentos/Día",
                    ),
                ),
                (
                    "tiempo_espera_segundos",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Tiempo de espera para respuestas en segundos",
                        verbose_name="Tiempo Espera (seg)",
                    ),
                ),
                (
                    "reintentos_maximos",
                    models.PositiveIntegerField(
                        default=3,
                        help_text="Número máximo de reintentos",
                        verbose_name="Reintentos Máximos",
                    ),
                ),
                (
                    "requiere_token",
                    models.BooleanField(
                        default=True,
                        help_text="Si requiere token de autenticación",
                        verbose_name="Requiere Token",
                    ),
                ),
                (
                    "tipo_autenticacion",
                    models.CharField(
                        choices=[
                            ("token", "Token"),
                            ("api_key", "API Key"),
                            ("oauth", "OAuth"),
                            ("basic", "Basic Auth"),
                        ],
                        default="token",
                        help_text="Tipo de autenticación requerida",
                        max_length=20,
                        verbose_name="Tipo Autenticación",
                    ),
                ),
                (
                    "endpoint_emision",
                    models.CharField(
                        help_text="Endpoint para emisión de documentos",
                        max_length=200,
                        verbose_name="Endpoint Emisión",
                    ),
                ),
                (
                    "endpoint_consulta",
                    models.CharField(
                        help_text="Endpoint para consulta de documentos",
                        max_length=200,
                        verbose_name="Endpoint Consulta",
                    ),
                ),
                (
                    "endpoint_anulacion",
                    models.CharField(
                        blank=True,
                        help_text="Endpoint para anulación de documentos",
                        max_length=200,
                        null=True,
                        verbose_name="Endpoint Anulación",
                    ),
                ),
                (
                    "endpoint_comunicacion_baja",
                    models.CharField(
                        blank=True,
                        help_text="Endpoint para comunicación de baja",
                        max_length=200,
                        null=True,
                        verbose_name="Endpoint Comunicación Baja",
                    ),
                ),
                (
                    "formato_respuesta",
                    models.CharField(
                        choices=[("json", "JSON"), ("xml", "XML"), ("soap", "SOAP")],
                        default="json",
                        help_text="Formato de respuesta de la API",
                        max_length=20,
                        verbose_name="Formato Respuesta",
                    ),
                ),
                (
                    "total_documentos_enviados",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total de documentos enviados",
                        verbose_name="Total Documentos Enviados",
                    ),
                ),
                (
                    "total_documentos_exitosos",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total de documentos procesados exitosamente",
                        verbose_name="Total Documentos Exitosos",
                    ),
                ),
                (
                    "total_documentos_error",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total de documentos con error",
                        verbose_name="Total Documentos Error",
                    ),
                ),
                (
                    "fecha_ultimo_envio",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha del último envío",
                        null=True,
                        verbose_name="Último Envío",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proveedor de Integración",
                "verbose_name_plural": "Proveedores de Integración",
                "db_table": "integraciones_proveedor_integracion",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="WebhookIntegracion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identificador único universal",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "tipo_webhook",
                    models.CharField(
                        choices=[
                            ("documento_procesado", "Documento Procesado"),
                            ("documento_rechazado", "Documento Rechazado"),
                            ("respuesta_sunat", "Respuesta SUNAT"),
                            ("estado_cambio", "Cambio de Estado"),
                            ("notificacion_general", "Notificación General"),
                        ],
                        db_index=True,
                        help_text="Tipo de webhook recibido",
                        max_length=30,
                        verbose_name="Tipo Webhook",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("recibido", "Recibido"),
                            ("procesado", "Procesado"),
                            ("error", "Error"),
                            ("ignorado", "Ignorado"),
                        ],
                        db_index=True,
                        default="recibido",
                        help_text="Estado del procesamiento",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "fecha_recepcion",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Fecha de recepción del webhook",
                        verbose_name="Fecha Recepción",
                    ),
                ),
                (
                    "fecha_procesamiento",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha de procesamiento del webhook",
                        null=True,
                        verbose_name="Fecha Procesamiento",
                    ),
                ),
                (
                    "headers_recibidos",
                    models.TextField(
                        blank=True,
                        help_text="Headers recibidos en formato JSON",
                        null=True,
                        verbose_name="Headers Recibidos",
                    ),
                ),
                (
                    "payload_recibido",
                    models.TextField(
                        help_text="Datos recibidos del webhook",
                        verbose_name="Payload Recibido",
                    ),
                ),
                (
                    "documento_referencia",
                    models.CharField(
                        blank=True,
                        help_text="Documento de referencia en el webhook",
                        max_length=50,
                        null=True,
                        verbose_name="Documento Referencia",
                    ),
                ),
                (
                    "mensaje_procesamiento",
                    models.TextField(
                        blank=True,
                        help_text="Mensaje del resultado del procesamiento",
                        null=True,
                        verbose_name="Mensaje Procesamiento",
                    ),
                ),
                (
                    "error_procesamiento",
                    models.TextField(
                        blank=True,
                        help_text="Error ocurrido durante el procesamiento",
                        null=True,
                        verbose_name="Error Procesamiento",
                    ),
                ),
                (
                    "ip_origen",
                    models.GenericIPAddressField(
                        help_text="IP desde donde se recibió el webhook",
                        verbose_name="IP Origen",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User Agent del webhook",
                        null=True,
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "signature_header",
                    models.CharField(
                        blank=True,
                        help_text="Header de firma de seguridad",
                        max_length=200,
                        null=True,
                        verbose_name="Signature Header",
                    ),
                ),
                (
                    "signature_valida",
                    models.BooleanField(
                        default=False,
                        help_text="Si la firma de seguridad es válida",
                        verbose_name="Signature Válida",
                    ),
                ),
                (
                    "documento_electronico",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="webhooks_recibidos",
                        to="facturacion.documentoelectronico",
                        verbose_name="Documento Electrónico",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="webhooks",
                        to="integraciones.proveedorintegracion",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Webhook de Integración",
                "verbose_name_plural": "Webhooks de Integración",
                "db_table": "integraciones_webhook_integracion",
                "ordering": ["-fecha_recepcion"],
            },
        ),
        migrations.AddIndex(
            model_name="proveedorintegracion",
            index=models.Index(fields=["codigo"], name="idx_proveedor_codigo"),
        ),
        migrations.AddIndex(
            model_name="proveedorintegracion",
            index=models.Index(fields=["tipo"], name="idx_proveedor_tipo"),
        ),
        migrations.AddIndex(
            model_name="proveedorintegracion",
            index=models.Index(fields=["estado"], name="idx_proveedor_estado"),
        ),
        migrations.AddIndex(
            model_name="proveedorintegracion",
            index=models.Index(fields=["es_principal"], name="idx_proveedor_principal"),
        ),
        migrations.AddIndex(
            model_name="proveedorintegracion",
            index=models.Index(fields=["activo"], name="idx_proveedor_activo"),
        ),
        migrations.AddField(
            model_name="logintegracion",
            name="configuracion",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="logs",
                to="integraciones.configuracionintegracion",
                verbose_name="Configuración",
            ),
        ),
        migrations.AddField(
            model_name="logintegracion",
            name="documento_electronico",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="logs_integracion",
                to="facturacion.documentoelectronico",
                verbose_name="Documento Electrónico",
            ),
        ),
        migrations.AddField(
            model_name="logintegracion",
            name="proveedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="logs",
                to="integraciones.proveedorintegracion",
                verbose_name="Proveedor",
            ),
        ),
        migrations.AddField(
            model_name="logintegracion",
            name="reintento_de",
            field=models.ForeignKey(
                blank=True,
                help_text="Log original del cual es reintento",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reintentos",
                to="integraciones.logintegracion",
                verbose_name="Reintento De",
            ),
        ),
        migrations.AddField(
            model_name="configuracionintegracion",
            name="proveedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="configuraciones",
                to="integraciones.proveedorintegracion",
                verbose_name="Proveedor",
            ),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(fields=["proveedor"], name="idx_webhook_proveedor"),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(fields=["tipo_webhook"], name="idx_webhook_tipo"),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(fields=["estado"], name="idx_webhook_estado"),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(fields=["fecha_recepcion"], name="idx_webhook_fecha"),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(
                fields=["documento_electronico"], name="idx_webhook_documento"
            ),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(fields=["ip_origen"], name="idx_webhook_ip"),
        ),
        migrations.AddIndex(
            model_name="webhookintegracion",
            index=models.Index(fields=["activo"], name="idx_webhook_activo"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["proveedor"], name="idx_log_proveedor"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(
                fields=["documento_electronico"], name="idx_log_documento"
            ),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["tipo_operacion"], name="idx_log_operacion"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["estado"], name="idx_log_estado"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["fecha_envio"], name="idx_log_fecha_envio"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["exitoso"], name="idx_log_exitoso"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(
                fields=["codigo_respuesta_http"], name="idx_log_codigo_http"
            ),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["numero_intento"], name="idx_log_intento"),
        ),
        migrations.AddIndex(
            model_name="logintegracion",
            index=models.Index(fields=["activo"], name="idx_log_activo"),
        ),
        migrations.AddIndex(
            model_name="configuracionintegracion",
            index=models.Index(fields=["proveedor"], name="idx_int_config_proveedor"),
        ),
        migrations.AddIndex(
            model_name="configuracionintegracion",
            index=models.Index(fields=["ambiente"], name="idx_int_config_ambiente"),
        ),
        migrations.AddIndex(
            model_name="configuracionintegracion",
            index=models.Index(fields=["ruc_empresa"], name="idx_int_config_ruc"),
        ),
        migrations.AddIndex(
            model_name="configuracionintegracion",
            index=models.Index(
                fields=["configuracion_valida"], name="idx_int_config_valida"
            ),
        ),
        migrations.AddIndex(
            model_name="configuracionintegracion",
            index=models.Index(fields=["activo"], name="idx_int_config_activo"),
        ),
        migrations.AlterUniqueTogether(
            name="configuracionintegracion",
            unique_together={("proveedor", "ambiente")},
        ),
    ]
